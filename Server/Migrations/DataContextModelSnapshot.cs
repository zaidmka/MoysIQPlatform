// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoysIQPlatform.Server.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoysIQPlatform.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Accounts.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("department");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("isapproved");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("passwordhash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("WorkLocation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("worklocation");

                    b.HasKey("Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Accounts.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birthday");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("grade");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("isapproved");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("passwordhash");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("schoolname");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Questions.AnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean")
                        .HasColumnName("iscorrect");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("questionid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("answeroptions");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Questions.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("createdbyemployeeid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("ismandatory");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.StudentAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnswerOptionId")
                        .HasColumnType("integer")
                        .HasColumnName("answeroptionid");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("answeredat");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("questionid");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("studentid");

                    b.Property<int>("TestId")
                        .HasColumnType("integer")
                        .HasColumnName("testid");

                    b.Property<string>("WrittenAnswer")
                        .HasColumnType("text")
                        .HasColumnName("writtenanswer");

                    b.HasKey("Id");

                    b.HasIndex("AnswerOptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TestId");

                    b.ToTable("studentanswers");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("createdbyemployeeid");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("endtime");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starttime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.ToTable("tests");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.TestQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("ismandatory");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("questionid");

                    b.Property<int>("TestId")
                        .HasColumnType("integer")
                        .HasColumnName("testid");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("testquestions");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Questions.AnswerOption", b =>
                {
                    b.HasOne("MoysIQPlatform.Shared.Models.Questions.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Questions.Question", b =>
                {
                    b.HasOne("MoysIQPlatform.Shared.Models.Accounts.Employee", "Employee")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.StudentAnswer", b =>
                {
                    b.HasOne("MoysIQPlatform.Shared.Models.Questions.AnswerOption", "AnswerOption")
                        .WithMany()
                        .HasForeignKey("AnswerOptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MoysIQPlatform.Shared.Models.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoysIQPlatform.Shared.Models.Accounts.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoysIQPlatform.Shared.Models.Tests.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnswerOption");

                    b.Navigation("Question");

                    b.Navigation("Student");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.Test", b =>
                {
                    b.HasOne("MoysIQPlatform.Shared.Models.Accounts.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.TestQuestion", b =>
                {
                    b.HasOne("MoysIQPlatform.Shared.Models.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoysIQPlatform.Shared.Models.Tests.Test", "Test")
                        .WithMany("TestQuestions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Accounts.Employee", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Questions.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("MoysIQPlatform.Shared.Models.Tests.Test", b =>
                {
                    b.Navigation("TestQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
