@page "/admin/logine"
@using System.ComponentModel.DataAnnotations
@using MoysIQPlatform.Shared.Models.Accounts
@inject IEmployeeService EmployeeService
@inject NavigationManager Nav

<MudPaper Class="pa-6 mx-auto mt-6" MaxWidth="500px" Elevation="4">
    <h3 class="text-center mb-4">🔐 Employee Login</h3>

    @if (!string.IsNullOrEmpty(Message))
    {
        <MudAlert Severity="Severity.Error" Elevation="0">@Message</MudAlert>
    }

    <EditForm Model="loginModel" OnValidSubmit="HandleLogin" OnInvalidSubmit="HandleInvalid">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <MudTextField Label="Email"
                      @bind-Value="loginModel.Email"
                      For="@(() => loginModel.Email)"
                      InputType="InputType.Email"
                      Required="true"
                      Class="mb-3" />

        <MudTextField Label="Password"
                      @bind-Value="loginModel.Password"
                      For="@(() => loginModel.Password)"
                      InputType="InputType.Password"
                      Required="true"
                      Class="mb-3" />

        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   FullWidth>
            Login
        </MudButton>
    </EditForm>

    <div class="mt-4 text-center">
        <span>ما عندك حساب؟</span>
        <MudLink Href="/admin/registere">سجل الآن</MudLink>
    </div>
</MudPaper>

@code {
    private EmployeeLogin loginModel = new();
    private string? Message;

    private async Task HandleLogin()
    {
        Console.WriteLine($"📥 Email: '{loginModel.Email}'");
        Console.WriteLine($"📥 Password: '{loginModel.Password}'");

        if (string.IsNullOrWhiteSpace(loginModel.Email) || string.IsNullOrWhiteSpace(loginModel.Password))
        {
            Console.WriteLine("❌ One or more fields are empty!");
            return;
        }

        var result = await EmployeeService.Login(loginModel);

        if (!result.Success)
        {
            Message = result.Message;
            return;
        }

        Nav.NavigateTo("/");
    }

    private void HandleInvalid(EditContext context)
    {
        Console.WriteLine("❌ النموذج غير صالح");
    }
}
