@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using MoysIQPlatform.Shared.Models.Tests
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ITestService TestService


<div dir="rtl">

<AuthorizeView>
    <Authorized>
        <CurrentUserState OnStateReady="HandleUserState" />

        @if (userState is not null)
        {
            <div class="pa-4">
                <MudText Typo="Typo.h6">👋 أهلاً، @userState.FullName</MudText>
                <MudText Typo="Typo.subtitle1">📧 البريد الإلكتروني: @userState.Email</MudText>
                <MudText Typo="Typo.subtitle1">📛 النوع: @(userState.Role)</MudText>
                <MudText Typo="Typo.subtitle2">✅ حالة الاعتماد: @(userState.IsApproved)</MudText>
            </div>

            @if (userState.IsApproved.Contains("true"))
            {
                @if (userState.Role.Contains("Student"))
                {
                    <MudPaper Class="pa-4 mt-4" Elevation="2">
                        <MudText Typo="Typo.h6">🎓 مرحباً بك في منصة الاختبارات</MudText>
                        @if (availableTests?.Any() == true)
                        {
                            <MudText Typo="Typo.subtitle2" Class="mt-2">🧪 لديك @availableTests.Count اختبار متاح.</MudText>

                            @foreach (var test in availableTests)
                            {
                                <MudPaper Class="pa-3 mt-2" Elevation="1">
                                    <MudText Typo="Typo.subtitle1">📘 @test.Title</MudText>
                                    <MudText Typo="Typo.caption">⏰ المدة: @test.EndTime - @test.StartTime</MudText>
                                    <MudButton Href="@($"/student-test/{test.Id}")" Color="Color.Primary" Variant="Variant.Filled" Class="mt-2">
                                        🚀 ابدأ الاختبار
                                    </MudButton>
                                </MudPaper>
                            }
                        }
                        else
                        {
                            <MudText Class="mt-2 text-info">📭 لا توجد اختبارات متاحة حالياً.</MudText>
                        }
                    </MudPaper>
                }

                else if (userState.Role.Contains("Editor") || userState.Role.Contains("Admin"))
                {
                    <MudPaper Class="pa-4 mt-4" Elevation="2">
                        <MudText Typo="Typo.h6">🛠️ لوحة تحكم الموظف</MudText>

                        <MudButton Href="/create-test" Variant="Variant.Filled" Color="Color.Primary" Class="mt-2 me-2">
                            ➕ إضافة اختبار جديد
                        </MudButton>

                        <MudButton Href="/questions" Variant="Variant.Outlined" Color="Color.Secondary" Class="mt-2">
                            ❓ إدارة الأسئلة
                        </MudButton>
                    </MudPaper>
                }
            }
            else
            {
                <MudText Class="mt-4 text-warning">⏳ بانتظار موافقة الإدارة على حسابك.</MudText>
            }
        }
        else
        {
            <p><em>جاري تحميل بيانات المستخدم...</em></p>
        }
    </Authorized>

    <NotAuthorized>
        <div class="center-content">
            <img class="fade-in-out" src="/logo250.png" alt="Menu Icon" />
            <h4 style="font-family:Cairo">
                الرجاء تسجيل
                <a href="login">الدخول  <MudIcon Icon="@Icons.Material.Filled.Login" Color="Color.Info" Size="Size.Medium" /> </a>
                لغرض المحتوى
            </h4>
        </div>
        <div dir="rtl">
            <MudPaper Class="pa-4 mt-4" Elevation="2">
                <MudText Typo="Typo.h6">🧠 منصة MoysIQPlatform</MudText>
                <MudText Typo="Typo.body1" Class="mt-2">
                    منصة إلكترونية تهدف إلى تنظيم اختبارات الذكاء وتحليل القدرات العقلية للطلبة ضمن بيئة آمنة وتفاعلية.
                </MudText>
                <MudText Typo="Typo.body1">
                    يتم إنشاء الاختبارات من قبل موظفين معتمدين، ويُتاح للطلبة المعتمدين فقط الدخول والمشاركة.
                </MudText>
            </MudPaper>
        </div>
    </NotAuthorized>
</AuthorizeView>
</div>
@code{
    private UserAuthState? userState;
    private List<TestDto> availableTests = new();


    private async  Task HandleUserState(UserAuthState state)
    {
        userState = state;
        if (userState.Role == "Student" && userState.IsApproved == "true")
        {
            availableTests = await TestService.GetAvailableTestsAsync();
        }
        else if (userState.Role == "Editor" || userState.Role == "Admin")
        {

        }
        else
        {
            availableTests.Clear();
        }

        return;
    }
}